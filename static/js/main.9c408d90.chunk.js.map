{"version":3,"sources":["BarChart.js","App.js","serviceWorker.js","index.js"],"names":["am4core","am4themes_animated","BarChart","Id","this","props","id","toString","chart","am4charts","data","categoryAxis","xAxes","push","dataFields","category","renderer","grid","template","location","minGridDistance","labels","adapter","add","dy","target","dataItem","index","yAxes","series","valueY","categoryX","name","columns","tooltipText","fillOpacity","columnTemplate","strokeWidth","strokeOpacity","dispose","className","style","width","textAlign","padding","height","Component","App","state","items","key","value","date","Date","entry","map","item","selected","onChange","findIndex","el","setState","length","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9c408d90.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nexport class BarChart extends Component {\r\n  componentDidMount() {\r\n    const newId = this.props.id;\r\n    let Id = \"bar-chart\" + newId.toString();\r\n\r\n    let chart = am4core.create(`${Id}`, am4charts.XYChart);\r\n    let data = this.props.data;\r\n    chart.data = data;\r\n\r\n    let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n    categoryAxis.dataFields.category = \"name\";\r\n    categoryAxis.renderer.grid.template.location = 0;\r\n    categoryAxis.renderer.minGridDistance = 30;\r\n\r\n    categoryAxis.renderer.labels.template.adapter.add(\r\n      \"dy\",\r\n      function (dy, target) {\r\n        if (target.dataItem && target.dataItem.index & (2 == 2)) {\r\n          return dy + 25;\r\n        }\r\n        return dy;\r\n      }\r\n    );\r\n\r\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n\r\n    // Create series\r\n    let series = chart.series.push(new am4charts.ColumnSeries());\r\n    series.dataFields.valueY = \"value\";\r\n    series.dataFields.categoryX = \"name\";\r\n    series.name = \"Value\";\r\n    series.columns.template.tooltipText = \"{categoryX}: [bold]{valueY}[/]\";\r\n    series.columns.template.fillOpacity = 0.8;\r\n\r\n    let columnTemplate = series.columns.template;\r\n    columnTemplate.strokeWidth = 2;\r\n    columnTemplate.strokeOpacity = 1;\r\n    this.chart = chart;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.chart) {\r\n      this.chart.dispose();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const newId = this.props.id;\r\n    let Id = \"bar-chart\" + newId.toString();\r\n\r\n    return (\r\n      <div className=\"barchart\">\r\n        <div className=\"title\" style={{ width: \"100%\", textAlign: \"center\" }}>\r\n          <h3 style={{ padding: 10 }}>Bar Chart</h3>\r\n        </div>\r\n        <div id={`${Id}`} style={{ width: \"100%\", height: 400 }}></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BarChart;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport BarChart from \"./BarChart\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nexport class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: [\r\n        {\r\n          key: \"1\",\r\n          name: \"Listening by keeping quiet, responds to pain, and touch.\",\r\n          value: \"1\",\r\n          date: new Date(),\r\n        },\r\n        {\r\n          key: \"2\",\r\n          name:\r\n            \"Communicates, seeks attention by crying or rapidly turning head sideways, and moving arms, legs and body.\",\r\n          value: \"2\",\r\n          date: new Date(),\r\n        },\r\n        {\r\n          key: \"3\",\r\n          name: \"Notices mother’s or caregiver’s presence, or absence.\",\r\n          value: \"3\",\r\n          date: new Date(),\r\n        },\r\n        {\r\n          key: \"4\",\r\n          name:\r\n            \"Begins studying faces, gazing at mother’s or caregiver’s face with interest. Can tell when mother or caregiver is around.\",\r\n          value: \"4\",\r\n          date: new Date(),\r\n        },\r\n        {\r\n          key: \"5\",\r\n          name: \"Smiles to parents or smiles back.\",\r\n          value: \"5\",\r\n          date: new Date(),\r\n        },\r\n        {\r\n          key: \"6\",\r\n          name:\r\n            \"Reaches for familiar people or objects. Waits eagerly to be fed.\",\r\n          value: \"6\",\r\n          date: new Date(),\r\n        },\r\n        {\r\n          key: \"7\",\r\n          name: \"Babbles, laughs, orient to voice, ad enjoy looking.\",\r\n          value: \"7\",\r\n          date: new Date(),\r\n        },\r\n        {\r\n          key: \"8\",\r\n          name: \"Develops a fear of strangers.\",\r\n          value: \"8\",\r\n          date: new Date(),\r\n        },\r\n        {\r\n          key: \"9\",\r\n          name: \"Indicates objects of interest by pointing fingers.\",\r\n          value: \"9\",\r\n          date: new Date(),\r\n        },\r\n        {\r\n          key: \"10\",\r\n          name: \"Waves bye-bye, plays pat-a-cake, peke-a-boo.\",\r\n          value: \"10\",\r\n          date: new Date(),\r\n        },\r\n        {\r\n          key: \"11\",\r\n          name: \"Develops Joint attention, actively explores environment.\",\r\n          value: \"11\",\r\n          date: new Date(),\r\n        },\r\n        {\r\n          key: \"12\",\r\n          name: \"Says Dada, Mama, knows his name, and comes when called.\",\r\n          value: \"12\",\r\n          date: new Date(),\r\n        },\r\n        {\r\n          key: \"13\",\r\n          name:\r\n            \"Checks with caregiver before doing certain activities (Social referencing), learns rules and cooperates with parents.\",\r\n          value: \"13\",\r\n          date: new Date(),\r\n        },\r\n        {\r\n          key: \"14\",\r\n          name:\r\n            \"Points to indicate needs, has a budding vocabulary of at least 3-6 news words other than mama and Dada.\",\r\n          value: \"14\",\r\n          date: new Date(),\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let entry = this.state.items;\r\n\r\n    return (\r\n      <div className=\"main\">\r\n        <div className=\"leftContent\">\r\n          {/* Datatable */}\r\n          {/* datatable to show data */}\r\n          <div className=\"datatable\">\r\n            <table className=\"data-table\">\r\n              <tbody>\r\n                <tr>\r\n                  <th>Behaviour</th>\r\n                  <th style={{ width: 30 }}>Date</th>\r\n                </tr>\r\n                {entry.map((item) => {\r\n                  return (\r\n                    <tr key={item.key}>\r\n                      <td>{item.name}</td>\r\n                      <td>\r\n                        <DatePicker\r\n                          selected={item.date}\r\n                          onChange={(date) => {\r\n                            let index = this.state.items.findIndex(\r\n                              (el) => el.key == item.key\r\n                            );\r\n                            item.date = date;\r\n\r\n                            let items = this.state.items;\r\n                            items[index] = item;\r\n\r\n                            this.setState(items);\r\n                          }}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rightContent\">\r\n          <div className=\"chart-container\">\r\n            <div className=\"chart\">\r\n              <BarChart data={this.state.items} id={this.state.items.length} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}