{"version":3,"sources":["components/LineChart.js","components/DaySelect.js","App.js","serviceWorker.js","index.js"],"names":["LineChart","this","initChart","prevProps","chart","_super","dispose","am4core","am4charts","data","props","dateFormatter","inputDateFormat","xAxis","xAxes","push","baseUnit","title","text","yAxes","series","dataFields","valueY","valueX","tooltipText","strokeWidth","tooltip","background","cornerRadius","strokeOpacity","pointerOrientation","label","minWidth","minHeight","textAlign","textValign","bullet","bullets","circle","radius","fill","states","create","properties","scale","cursor","behavior","snapToSeries","scrollbarY","parent","leftAxesContainer","toBack","scrollbarX","bottomAxesContainer","className","style","width","height","padding","id","Component","DaySelect","onChangeMonth","e","setState","month","target","value","onUpdateDate","state","day","onChangeDay","console","log","months","i","days","onChange","map","option","key","selected","React","App","index","items","findIndex","el","parseInt","totalDays","startDate","moment","name","date","toDate","add","entry","item","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"mUAgHeA,G,cAxGf,kLAEIC,KAAKC,cAFT,yCAKqBC,GAGbF,KAAKG,MAAMC,QACbJ,KAAKG,MAAME,UAEbL,KAAKC,cAXT,6CAgBQD,KAAKG,MAAMC,QACbJ,KAAKG,MAAME,YAjBjB,kCAsBI,IAAIF,EAAQG,IAAe,WAAYC,KACnCC,EAAOR,KAAKS,MAAMD,KACtBL,EAAMK,KAAOA,EAGbL,EAAMO,cAAcC,gBAAkB,aAItC,IAAIC,EAAQT,EAAMU,MAAMC,KAAK,IAAIP,KACjCK,EAAMG,SAAW,MACjBH,EAAMI,MAAMC,KAAO,WAEHd,EAAMe,MAAMJ,KAAK,IAAIP,KAArC,IAGIY,EAAShB,EAAMgB,OAAOL,KAAK,IAAIP,KACnCY,EAAOC,WAAWC,OAAS,QAG3BF,EAAOC,WAAWE,OAAS,YAE3BH,EAAOI,YAAc,SACrBJ,EAAOK,YAAc,EAIrBL,EAAOM,QAAQC,WAAWC,aAAe,GACzCR,EAAOM,QAAQC,WAAWE,cAAgB,EAC1CT,EAAOM,QAAQI,mBAAqB,WACpCV,EAAOM,QAAQK,MAAMC,SAAW,GAChCZ,EAAOM,QAAQK,MAAME,UAAY,GACjCb,EAAOM,QAAQK,MAAMG,UAAY,SACjCd,EAAOM,QAAQK,MAAMI,WAAa,SAGlC,IAAIC,EAAShB,EAAOiB,QAAQtB,KAAK,IAAIP,KACrC4B,EAAOE,OAAOb,YAAc,EAC5BW,EAAOE,OAAOC,OAAS,EACvBH,EAAOE,OAAOE,KAAOjC,IAAc,QAEjB6B,EAAOK,OAAOC,OAAO,SAC3BC,WAAWC,MAAQ,IAG/BxC,EAAMyC,OAAS,IAAIrC,IACnBJ,EAAMyC,OAAOC,SAAW,QAIxB1C,EAAMyC,OAAOE,aAAe3B,EAG5BhB,EAAM4C,WAAa,IAAIzC,IACvBH,EAAM4C,WAAWC,OAAS7C,EAAM8C,kBAChC9C,EAAM4C,WAAWG,SAGjB/C,EAAMgD,WAAa,IAAI5C,IACvBJ,EAAMgD,WAAWhC,OAAOL,KAAKK,GAC7BhB,EAAMgD,WAAWH,OAAS7C,EAAMiD,oBAKhCpD,KAAKG,MAAQA,IAvFjB,+BA2FI,OACE,yBAAKkD,UAAU,YAAYC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QACzD,yBAAKH,UAAU,QAAQC,MAAO,CAAEC,MAAO,OAAQtB,UAAW,WACxD,wBAAIqB,MAAO,CAAEG,QAAS,KAAtB,kDAIF,yBAAKC,GAAG,WAAWJ,MAAO,CAAEC,MAAO,OAAQC,OAAQ,eAlG3D,GAA+BG,cC8EhBC,E,kDA3Eb,WAAYnD,GAAQ,IAAD,uBACjB,cAAMA,IAmBRoD,cAAgB,SAACC,GACf,EAAKC,SAAS,CACZC,MAAOF,EAAEG,OAAOC,QAGlB,EAAKzD,MAAM0D,aAAa,EAAK1D,MAAMiD,GAAII,EAAEG,OAAOC,MAAO,EAAKE,MAAMC,MAzBjD,EA4BnBC,YAAc,SAACR,GACb,EAAKC,SAAS,CACZM,IAAKP,EAAEG,OAAOC,QAGhB,EAAKzD,MAAM0D,aAAa,EAAK1D,MAAMiD,GAAI,EAAKU,MAAMJ,MAAOF,EAAEG,OAAOC,QA9BlE,EAAKE,MAAQ,CACXJ,MAAO,EAAKvD,MAAMuD,MAClBK,IAAK,EAAK5D,MAAM4D,KAGlBE,QAAQC,IAAI,EAAKJ,OACjB,EAAKK,OAAS,GACd,IAAK,IAAIC,EAAI,EAAGA,GAAK,GAAIA,IACvB,EAAKD,OAAO3D,KAAK4D,GAGnB,EAAKC,KAAO,GACZ,IAAK,IAAID,EAAI,EAAGA,GAAK,GAAIA,IACvB,EAAKC,KAAK7D,KAAK4D,GAhBA,S,qDAoCT,IAAD,OACP,OACE,yBAAKrB,UAAU,cAEb,4BAAQa,MAAOlE,KAAKoE,MAAMF,MAAOU,SAAU5E,KAAK6D,eAC7C7D,KAAKyE,OAAOI,KAAI,SAACC,GAChB,OACE,4BACEZ,MAAOY,EACPC,IAAKD,EACLE,SAAUF,GAAU,EAAKV,MAAMJ,OAE9Bc,OAKT,mDAGA,4BAAQZ,MAAOlE,KAAKoE,MAAMF,MAAOU,SAAU5E,KAAKsE,aAC7CtE,KAAK2E,KAAKE,KAAI,SAACC,GACd,OACE,4BACEZ,MAAOY,EACPC,IAAKD,EACLE,SAAUF,GAAU,EAAKV,MAAMC,KAE9BS,OAKT,8C,GAtEgBG,IAAMtB,WCuNfuB,EAvNf,kDACE,WAAYzE,GAAQ,IAAD,uBACjB,cAAMA,IA6IR0D,aAAe,SAACY,EAAKf,EAAOK,GAC1BE,QAAQC,IAAR,gBAAqBO,EAArB,qBAAqCf,EAArC,mBAAqDK,IAErD,IAAIc,EAAQ,EAAKf,MAAMgB,MAAMC,WAAU,SAACC,GAAD,OAAQA,EAAGP,KAAOA,KAErDK,EAAQ,EAAKhB,MAAMgB,MACvBA,EAAMD,GAAOnB,MAAQA,EACrBoB,EAAMD,GAAOd,IAAMA,EAEnBL,EAAQuB,SAASvB,GACjBK,EAAMkB,SAASlB,GAEbe,EAAMD,GAAOK,UADXxB,EAAQ,GACe,IAAqB,IAAdA,EAAQ,IAAWK,EAElB,GAARL,EAAaK,EAGxCE,QAAQC,IAAI,eAAgBY,EAAMD,GAAOK,WAEzC,EAAKzB,SAASqB,IA9Jd,IAAIK,EAAYC,MAHC,OAKjB,EAAKtB,MAAQ,CACXgB,MAAO,CACL,CACEL,IAAK,IACLY,KAAM,2DACNzB,MAAO,IACP0B,KAAMF,IAAOD,GAAWI,SACxB7B,MAAO,EACPK,IAAK,EACLmB,UAAW,GAEb,CACET,IAAK,IACLY,KACE,4GACFzB,MAAO,IACP0B,KAAMF,IAAOD,GAAWK,IAAI,EAAG,QAAQD,SACvC7B,MAAO,EACPK,IAAK,EACLmB,UAAW,GAEb,CACET,IAAK,IACLY,KAAM,kEACNzB,MAAO,IACP0B,KAAMF,IAAOD,GAAWK,IAAI,EAAG,QAAQD,SACvC7B,MAAO,EACPK,IAAK,EACLmB,UAAW,GAEb,CACET,IAAK,IACLY,KACE,sIACFzB,MAAO,IACP0B,KAAMF,IAAOD,GAAWK,IAAI,GAAI,QAAQD,SACxC7B,MAAO,EACPK,IAAK,GACLmB,UAAW,IAEb,CACET,IAAK,IACLY,KAAM,oCACNzB,MAAO,IACP0B,KAAMF,IAAOD,GAAWK,IAAI,GAAI,QAAQD,SACxC7B,MAAO,EACPK,IAAK,GACLmB,UAAW,IAEb,CACET,IAAK,IACLY,KACE,mEACFzB,MAAO,IACP0B,KAAMF,IAAOD,GAAWK,IAAI,EAAG,UAAUD,SACzC7B,MAAO,EACPK,IAAK,EACLmB,UAAW,IAEb,CACET,IAAK,IACLY,KAAM,sDACNzB,MAAO,IACP0B,KAAMF,IAAOD,GAAWK,IAAI,EAAG,UAAUD,SACzC7B,MAAO,EACPK,IAAK,EACLmB,UAAW,KAEb,CACET,IAAK,IACLY,KAAM,gCACNzB,MAAO,IACP0B,KAAMF,IAAOD,GAAWK,IAAI,EAAG,UAAUA,IAAI,GAAI,QAAQD,SACzD7B,MAAO,EACPK,IAAK,EACLmB,UAAW,KAEb,CACET,IAAK,IACLY,KAAM,qDACNzB,MAAO,IACP0B,KAAMF,IAAOD,GAAWK,IAAI,EAAG,UAAUD,SACzC7B,MAAO,EACPK,IAAK,EACLmB,UAAW,KAEb,CACET,IAAK,KACLY,KAAM,+CACNzB,MAAO,KACP0B,KAAMF,IAAOD,GAAWK,IAAI,EAAG,UAAUD,SACzC7B,MAAO,EACPK,IAAK,EACLmB,UAAW,KAEb,CACET,IAAK,KACLY,KAAM,2DACNzB,MAAO,KACP0B,KAAMF,IAAOD,GAAWK,IAAI,GAAI,UAAUD,SAC1C7B,MAAO,GACPK,IAAK,EACLmB,UAAW,KAEb,CACET,IAAK,KACLY,KAAM,0DACNzB,MAAO,KACP0B,KAAMF,IAAOD,GAAWK,IAAI,GAAI,UAAUD,SAC1C7B,MAAO,GACPK,IAAK,EACLmB,UAAW,KAEb,CACET,IAAK,KACLY,KACE,wHACFzB,MAAO,KACP0B,KAAMF,IAAOD,GAAWK,IAAI,GAAI,UAAUD,SAC1C7B,MAAO,GACPK,IAAK,EACLmB,UAAW,KAEb,CACET,IAAK,KACLY,KACE,0GACFzB,MAAO,KACP0B,KAAMF,IAAOD,GAAWK,IAAI,GAAI,UAAUD,SAC1C7B,MAAO,GACPK,IAAK,EACLmB,UAAW,OAxIA,EADrB,qDAqKY,IAAD,OACHO,EAAQ/F,KAAKoE,MAAMgB,MAEvB,OACE,yBAAK/B,UAAU,QACb,yBAAKA,UAAU,eAGb,yBAAKA,UAAU,aACb,2BAAOA,UAAU,cACf,+BACE,4BACE,oGAIA,wBAAIC,MAAO,CAAEC,MAAO,MAApB,SAEDwC,EAAMlB,KAAI,SAACmB,GACV,OACE,wBAAIjB,IAAKiB,EAAKjB,KACZ,4BAAKiB,EAAKL,MACV,4BACE,kBAAC,EAAD,CACEjC,GAAIsC,EAAKjB,IACTf,MAAOgC,EAAKhC,MACZK,IAAK2B,EAAK3B,IACVF,aAAc,EAAKA,wBAWrC,yBAAKd,UAAU,gBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,SACb,kBAAC,EAAD,CAAW7C,KAAMR,KAAKoE,MAAMgB,gBA9M1C,GAAyBzB,aCELsC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCVNC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1C,QAAQ0C,MAAMA,EAAMC,c","file":"static/js/main.4949d7bd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport _ from \"lodash\";\r\n\r\n// am4core.useTheme(am4themes_animated);\r\n\r\nexport class LineChart extends Component {\r\n  componentDidMount() {\r\n    this.initChart();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    //Handle refreshing the chart when the dataset changes\r\n    // if (!_.isEqual(prevProps.data, this.props.data)) {\r\n    if (this.chart._super) {\r\n      this.chart.dispose();\r\n    }\r\n    this.initChart();\r\n    // }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.chart._super) {\r\n      this.chart.dispose();\r\n    }\r\n  }\r\n\r\n  initChart() {\r\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n    let data = this.props.data;\r\n    chart.data = data;\r\n\r\n    // Set input format for the dates\r\n    chart.dateFormatter.inputDateFormat = \"yyyy-MM-dd\";\r\n\r\n    // Create axes\r\n    // let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n    var xAxis = chart.xAxes.push(new am4charts.DurationAxis());\r\n    xAxis.baseUnit = \"day\";\r\n    xAxis.title.text = \"Duration\";\r\n\r\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n\r\n    // Create series\r\n    let series = chart.series.push(new am4charts.LineSeries());\r\n    series.dataFields.valueY = \"value\";\r\n    // series.dataFields.dateX = \"date\";\r\n\r\n    series.dataFields.valueX = \"totalDays\";\r\n\r\n    series.tooltipText = \"{name}\";\r\n    series.strokeWidth = 2;\r\n    // series.minBulletDistance = 15;\r\n\r\n    // Drop-shaped tooltips\r\n    series.tooltip.background.cornerRadius = 20;\r\n    series.tooltip.background.strokeOpacity = 0;\r\n    series.tooltip.pointerOrientation = \"vertical\";\r\n    series.tooltip.label.minWidth = 40;\r\n    series.tooltip.label.minHeight = 40;\r\n    series.tooltip.label.textAlign = \"middle\";\r\n    series.tooltip.label.textValign = \"middle\";\r\n\r\n    // Make bullets grow on hover\r\n    let bullet = series.bullets.push(new am4charts.CircleBullet());\r\n    bullet.circle.strokeWidth = 2;\r\n    bullet.circle.radius = 4;\r\n    bullet.circle.fill = am4core.color(\"#fff\");\r\n\r\n    let bullethover = bullet.states.create(\"hover\");\r\n    bullethover.properties.scale = 1.3;\r\n\r\n    // Make a panning cursor\r\n    chart.cursor = new am4charts.XYCursor();\r\n    chart.cursor.behavior = \"panXY\";\r\n\r\n    // chart.cursor.xAxis = dateAxis;\r\n\r\n    chart.cursor.snapToSeries = series;\r\n\r\n    // Create vertical scrollbar and place it before the value axis\r\n    chart.scrollbarY = new am4core.Scrollbar();\r\n    chart.scrollbarY.parent = chart.leftAxesContainer;\r\n    chart.scrollbarY.toBack();\r\n\r\n    // Create a horizontal scrollbar with previe and place it underneath the date axis\r\n    chart.scrollbarX = new am4charts.XYChartScrollbar();\r\n    chart.scrollbarX.series.push(series);\r\n    chart.scrollbarX.parent = chart.bottomAxesContainer;\r\n\r\n    // dateAxis.start = 0.79;\r\n    // dateAxis.keepSelection = true;\r\n\r\n    this.chart = chart;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"linechart\" style={{ width: \"100%\", height: \"90%\" }}>\r\n        <div className=\"title\" style={{ width: \"100%\", textAlign: \"center\" }}>\r\n          <h3 style={{ padding: 10 }}>\r\n            Social Emotional Behavioral Graph for Infants\r\n          </h3>\r\n        </div>\r\n        <div id=\"chartdiv\" style={{ width: \"100%\", height: \"100%\" }}></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LineChart;\r\n","import React, { Component } from \"react\";\r\n\r\n// a select with dynamically created options\r\nconst options = [\r\n  \"Select an Option\",\r\n  \"First Option\",\r\n  \"Second Option\",\r\n  \"Third Option\",\r\n];\r\n\r\nclass DaySelect extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      month: this.props.month,\r\n      day: this.props.day,\r\n    };\r\n\r\n    console.log(this.state);\r\n    this.months = [];\r\n    for (let i = 0; i <= 15; i++) {\r\n      this.months.push(i);\r\n    }\r\n\r\n    this.days = [];\r\n    for (let i = 0; i <= 31; i++) {\r\n      this.days.push(i);\r\n    }\r\n  }\r\n\r\n  onChangeMonth = (e) => {\r\n    this.setState({\r\n      month: e.target.value,\r\n    });\r\n\r\n    this.props.onUpdateDate(this.props.id, e.target.value, this.state.day);\r\n  };\r\n\r\n  onChangeDay = (e) => {\r\n    this.setState({\r\n      day: e.target.value,\r\n    });\r\n\r\n    this.props.onUpdateDate(this.props.id, this.state.month, e.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-group\">\r\n        {/* Months */}\r\n        <select value={this.state.value} onChange={this.onChangeMonth}>\r\n          {this.months.map((option) => {\r\n            return (\r\n              <option\r\n                value={option}\r\n                key={option}\r\n                selected={option == this.state.month}\r\n              >\r\n                {option}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <span>&nbsp;Month&nbsp;&nbsp;</span>\r\n\r\n        {/* Days */}\r\n        <select value={this.state.value} onChange={this.onChangeDay}>\r\n          {this.days.map((option) => {\r\n            return (\r\n              <option\r\n                value={option}\r\n                key={option}\r\n                selected={option == this.state.day}\r\n              >\r\n                {option}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <span>&nbsp;Day</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DaySelect;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport moment from \"moment\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport LineChart from \"./components/LineChart\";\r\nimport DaySelect from \"./components/DaySelect\";\r\n\r\nexport class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let startDate = moment();\r\n\r\n    this.state = {\r\n      items: [\r\n        {\r\n          key: \"1\",\r\n          name: \"Listening by keeping quiet, responds to pain, and touch.\",\r\n          value: \"1\",\r\n          date: moment(startDate).toDate(),\r\n          month: 0,\r\n          day: 1,\r\n          totalDays: 1,\r\n        },\r\n        {\r\n          key: \"2\",\r\n          name:\r\n            \"Communicates, seeks attention by crying or rapidly turning head sideways, and moving arms, legs and body.\",\r\n          value: \"2\",\r\n          date: moment(startDate).add(2, \"days\").toDate(),\r\n          month: 0,\r\n          day: 2,\r\n          totalDays: 2,\r\n        },\r\n        {\r\n          key: \"3\",\r\n          name: \"Notices mother’s or caregiver’s presence, or absence.\",\r\n          value: \"3\",\r\n          date: moment(startDate).add(5, \"days\").toDate(),\r\n          month: 0,\r\n          day: 5,\r\n          totalDays: 5,\r\n        },\r\n        {\r\n          key: \"4\",\r\n          name:\r\n            \"Begins studying faces, gazing at mother’s or caregiver’s face with interest. Can tell when mother or caregiver is around.\",\r\n          value: \"4\",\r\n          date: moment(startDate).add(21, \"days\").toDate(),\r\n          month: 0,\r\n          day: 21,\r\n          totalDays: 21,\r\n        },\r\n        {\r\n          key: \"5\",\r\n          name: \"Smiles to parents or smiles back.\",\r\n          value: \"5\",\r\n          date: moment(startDate).add(49, \"days\").toDate(),\r\n          month: 1,\r\n          day: 21,\r\n          totalDays: 51,\r\n        },\r\n        {\r\n          key: \"6\",\r\n          name:\r\n            \"Reaches for familiar people or objects. Waits eagerly to be fed.\",\r\n          value: \"6\",\r\n          date: moment(startDate).add(3, \"months\").toDate(),\r\n          month: 2,\r\n          day: 0,\r\n          totalDays: 60,\r\n        },\r\n        {\r\n          key: \"7\",\r\n          name: \"Babbles, laughs, orient to voice, ad enjoy looking.\",\r\n          value: \"7\",\r\n          date: moment(startDate).add(4, \"months\").toDate(),\r\n          month: 4,\r\n          day: 0,\r\n          totalDays: 120,\r\n        },\r\n        {\r\n          key: \"8\",\r\n          name: \"Develops a fear of strangers.\",\r\n          value: \"8\",\r\n          date: moment(startDate).add(6, \"months\").add(15, \"days\").toDate(),\r\n          month: 6,\r\n          day: 0,\r\n          totalDays: 180,\r\n        },\r\n        {\r\n          key: \"9\",\r\n          name: \"Indicates objects of interest by pointing fingers.\",\r\n          value: \"9\",\r\n          date: moment(startDate).add(8, \"months\").toDate(),\r\n          month: 8,\r\n          day: 0,\r\n          totalDays: 240,\r\n        },\r\n        {\r\n          key: \"10\",\r\n          name: \"Waves bye-bye, plays pat-a-cake, peke-a-boo.\",\r\n          value: \"10\",\r\n          date: moment(startDate).add(9, \"months\").toDate(),\r\n          month: 9,\r\n          day: 0,\r\n          totalDays: 270,\r\n        },\r\n        {\r\n          key: \"11\",\r\n          name: \"Develops Joint attention, actively explores environment.\",\r\n          value: \"11\",\r\n          date: moment(startDate).add(10, \"months\").toDate(),\r\n          month: 10,\r\n          day: 0,\r\n          totalDays: 300,\r\n        },\r\n        {\r\n          key: \"12\",\r\n          name: \"Says Dada, Mama, knows his name, and comes when called.\",\r\n          value: \"12\",\r\n          date: moment(startDate).add(11, \"months\").toDate(),\r\n          month: 11,\r\n          day: 0,\r\n          totalDays: 330,\r\n        },\r\n        {\r\n          key: \"13\",\r\n          name:\r\n            \"Checks with caregiver before doing certain activities (Social referencing), learns rules and cooperates with parents.\",\r\n          value: \"13\",\r\n          date: moment(startDate).add(12, \"months\").toDate(),\r\n          month: 12,\r\n          day: 0,\r\n          totalDays: 360,\r\n        },\r\n        {\r\n          key: \"14\",\r\n          name:\r\n            \"Points to indicate needs, has a budding vocabulary of at least 3-6 news words other than mama and Dada.\",\r\n          value: \"14\",\r\n          date: moment(startDate).add(14, \"months\").toDate(),\r\n          month: 14,\r\n          day: 0,\r\n          totalDays: 425,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  onUpdateDate = (key, month, day) => {\r\n    console.log(`key : ${key}, month : ${month}, day : ${day}`);\r\n\r\n    let index = this.state.items.findIndex((el) => el.key == key);\r\n\r\n    let items = this.state.items;\r\n    items[index].month = month;\r\n    items[index].day = day;\r\n\r\n    month = parseInt(month);\r\n    day = parseInt(day);\r\n    if (month > 12) {\r\n      items[index].totalDays = 365 + (month - 12) * 30 + day;\r\n    } else {\r\n      items[index].totalDays = month * 30 + day;\r\n    }\r\n\r\n    console.log(\"totalDays : \", items[index].totalDays);\r\n\r\n    this.setState(items);\r\n  };\r\n\r\n  render() {\r\n    let entry = this.state.items;\r\n\r\n    return (\r\n      <div className=\"main\">\r\n        <div className=\"leftContent\">\r\n          {/* Datatable */}\r\n          {/* datatable to show data */}\r\n          <div className=\"datatable\">\r\n            <table className=\"data-table\">\r\n              <tbody>\r\n                <tr>\r\n                  <th>\r\n                    Social-Emotional Behavioral Graph for Infants (Newborn to 15\r\n                    Months)\r\n                  </th>\r\n                  <th style={{ width: 200 }}>Date</th>\r\n                </tr>\r\n                {entry.map((item) => {\r\n                  return (\r\n                    <tr key={item.key}>\r\n                      <td>{item.name}</td>\r\n                      <td>\r\n                        <DaySelect\r\n                          id={item.key}\r\n                          month={item.month}\r\n                          day={item.day}\r\n                          onUpdateDate={this.onUpdateDate}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rightContent\">\r\n          <div className=\"chart-container\">\r\n            <div className=\"chart\">\r\n              <LineChart data={this.state.items} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}