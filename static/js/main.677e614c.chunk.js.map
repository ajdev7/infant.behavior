{"version":3,"sources":["components/LineChart.js","components/DaySelect.js","App.js","serviceWorker.js","index.js"],"names":["LineChart","this","initChart","range","value","props","guide","seriesRange","prevProps","chart","_super","dispose","am4core","am4charts","data","dateFormatter","inputDateFormat","xAxis","xAxes","push","baseUnit","title","text","yAxes","categoryAxis","dataFields","category","renderer","minGridDistance","grid","template","disabled","series","valueX","valueY","tooltipText","strokeWidth","minBulletDistance","fillOpacity","tooltip","background","cornerRadius","strokeOpacity","pointerOrientation","label","minWidth","minHeight","textAlign","textValign","bullet","bullets","circle","radius","fill","states","create","properties","scale","cursor","behavior","snapToSeries","scrollbarY","parent","leftAxesContainer","toBack","scrollbarX","bottomAxesContainer","createSeriesRange","contents","colors","getIndex","endValue","length","totalDays","axisRanges","stroke","above","className","style","width","height","padding","id","Component","DaySelect","onChangeMonth","e","setState","month","target","onUpdateDate","state","day","onChangeDay","console","log","months","i","days","onChange","map","option","key","selected","React","App","parseInt","startDate","moment","items","name","date","toDate","add","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.677e614c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport _ from \"lodash\";\r\n\r\n// am4core.useTheme(am4themes_animated);\r\n\r\nexport class LineChart extends Component {\r\n  componentDidMount() {\r\n    this.initChart();\r\n\r\n    this.range.value = this.props.guide;\r\n    this.seriesRange.value = this.props.guide;\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    //Handle refreshing the chart when the dataset changes\r\n    // if (!_.isEqual(prevProps.data, this.props.data)) {\r\n    // if (this.chart._super) {\r\n    //   this.chart.dispose();\r\n    // }\r\n    // this.initChart();\r\n\r\n    this.range.value = this.props.guide;\r\n    this.seriesRange.value = this.props.guide;\r\n\r\n    // }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.chart._super) {\r\n      this.chart.dispose();\r\n    }\r\n  }\r\n\r\n  initChart() {\r\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n    let data = this.props.data;\r\n    chart.data = data;\r\n\r\n    // Set input format for the dates\r\n    chart.dateFormatter.inputDateFormat = \"yyyy-MM-dd\";\r\n\r\n    // Create axes\r\n    // let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n    var xAxis = chart.xAxes.push(new am4charts.DurationAxis());\r\n    xAxis.baseUnit = \"day\";\r\n    xAxis.title.text = \"Duration\";\r\n\r\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n\r\n    var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());\r\n    categoryAxis.dataFields.category = \"category\";\r\n    categoryAxis.renderer.minGridDistance = 30;\r\n    categoryAxis.renderer.grid.template.disabled = true;\r\n\r\n    // Create series\r\n    let series = chart.series.push(new am4charts.LineSeries());\r\n    series.dataFields.valueX = \"totalDays\";\r\n    series.dataFields.valueY = \"value\";\r\n\r\n    series.tooltipText = \"{name}\";\r\n    series.strokeWidth = 2;\r\n    series.minBulletDistance = 15;\r\n    series.fillOpacity = 0.5;\r\n\r\n    // Drop-shaped tooltips\r\n    series.tooltip.background.cornerRadius = 20;\r\n    series.tooltip.background.strokeOpacity = 0;\r\n    series.tooltip.pointerOrientation = \"vertical\";\r\n    series.tooltip.label.minWidth = 40;\r\n    series.tooltip.label.minHeight = 40;\r\n    series.tooltip.label.textAlign = \"middle\";\r\n    series.tooltip.label.textValign = \"middle\";\r\n\r\n    // Make bullets grow on hover\r\n    let bullet = series.bullets.push(new am4charts.CircleBullet());\r\n    bullet.circle.strokeWidth = 2;\r\n    bullet.circle.radius = 4;\r\n    bullet.circle.fill = am4core.color(\"#fff\");\r\n\r\n    let bullethover = bullet.states.create(\"hover\");\r\n    bullethover.properties.scale = 1.3;\r\n\r\n    // Make a panning cursor\r\n    chart.cursor = new am4charts.XYCursor();\r\n    chart.cursor.behavior = \"panXY\";\r\n\r\n    // chart.cursor.xAxis = dateAxis;\r\n\r\n    chart.cursor.snapToSeries = series;\r\n\r\n    // Create vertical scrollbar and place it before the value axis\r\n    chart.scrollbarY = new am4core.Scrollbar();\r\n    chart.scrollbarY.parent = chart.leftAxesContainer;\r\n    chart.scrollbarY.toBack();\r\n\r\n    // Create a horizontal scrollbar with previe and place it underneath the date axis\r\n    chart.scrollbarX = new am4charts.XYChartScrollbar();\r\n    chart.scrollbarX.series.push(series);\r\n    chart.scrollbarX.parent = chart.bottomAxesContainer;\r\n\r\n    //xAxis.start = -500;\r\n    // dateAxis.keepSelection = true;\r\n\r\n    var seriesRange = xAxis.createSeriesRange(series);\r\n    //seriesRange.contents.strokeDasharray = \"2,3\";\r\n    // seriesRange.contents.stroke = chart.colors.getIndex(8);\r\n    // seriesRange.contents.strokeWidth = 1;\r\n\r\n    seriesRange.contents.fill = chart.colors.getIndex(8);\r\n    seriesRange.contents.fillOpacity = 0.1;\r\n\r\n    seriesRange.value = 0;\r\n    seriesRange.endValue = chart.data[chart.data.length - 1].totalDays;\r\n\r\n    // Create value axis range\r\n    var range = xAxis.axisRanges.create();\r\n    // range.value = this.props.guide;\r\n    // range.grid.stroke = am4core.color(\"#A96478\");\r\n    // range.grid.strokeWidth = 2;\r\n    // range.grid.strokeOpacity = 1;\r\n    // range.grid.above = true;\r\n\r\n    range.grid.stroke = chart.colors.getIndex(8);\r\n    range.grid.strokeWidth = 2;\r\n    range.grid.strokeOpacity = 1;\r\n    range.grid.above = true;\r\n\r\n    // range.bullet = new am4core.ResizeButton();\r\n    // range.bullet.background.fill = chart.colors.getIndex(0);\r\n    // range.bullet.background.states.copyFrom(\r\n    //   chart.zoomOutButton.background.states\r\n    // );\r\n    // range.bullet.minX = 0;\r\n    // range.bullet.adapter.add(\"minY\", function (minY, target) {\r\n    //   target.maxY = chart.plotContainer.maxHeight;\r\n    //   target.maxX = chart.plotContainer.maxWidth;\r\n    //   return chart.plotContainer.maxHeight;\r\n    // });\r\n\r\n    // range.bullet.events.on(\"dragged\", function () {\r\n    //   range.value = xAxis.xToValue(range.bullet.pixelX);\r\n    //   seriesRange.value = range.value;\r\n\r\n    //   console.log(\"range.value : \", range.value);\r\n\r\n    // });\r\n\r\n    this.range = range;\r\n    this.seriesRange = seriesRange;\r\n    this.chart = chart;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"linechart\" style={{ width: \"100%\", height: \"80%\" }}>\r\n        <div className=\"title\" style={{ width: \"100%\", textAlign: \"center\" }}>\r\n          <h3 style={{ padding: 10 }}>\r\n            Social-Emotional Behavioral Graph for Infants <br />\r\n            (Newborn to 15 Months)\r\n          </h3>\r\n        </div>\r\n        <div id=\"chartdiv\" style={{ width: \"100%\", height: \"100%\" }}></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LineChart;\r\n","import React, { Component } from \"react\";\r\n\r\n// a select with dynamically created options\r\nconst options = [\r\n  \"Select an Option\",\r\n  \"First Option\",\r\n  \"Second Option\",\r\n  \"Third Option\",\r\n];\r\n\r\nclass DaySelect extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      month: this.props.month,\r\n      day: this.props.day,\r\n    };\r\n\r\n    console.log(this.state);\r\n    this.months = [];\r\n    for (let i = 0; i <= 15; i++) {\r\n      this.months.push(i);\r\n    }\r\n\r\n    this.days = [];\r\n    for (let i = 0; i <= 31; i++) {\r\n      this.days.push(i);\r\n    }\r\n  }\r\n\r\n  onChangeMonth = (e) => {\r\n    this.setState({\r\n      month: e.target.value,\r\n    });\r\n\r\n    this.props.onUpdateDate(this.props.id, e.target.value, this.state.day);\r\n  };\r\n\r\n  onChangeDay = (e) => {\r\n    this.setState({\r\n      day: e.target.value,\r\n    });\r\n\r\n    this.props.onUpdateDate(this.props.id, this.state.month, e.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-group\">\r\n        {/* Months */}\r\n        <select value={this.state.value} onChange={this.onChangeMonth}>\r\n          {this.months.map((option) => {\r\n            return (\r\n              <option\r\n                value={option}\r\n                key={option}\r\n                selected={option == this.props.month}\r\n              >\r\n                {option}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <span>&nbsp;Month&nbsp;&nbsp;</span>\r\n\r\n        {/* Days */}\r\n        <select value={this.state.value} onChange={this.onChangeDay}>\r\n          {this.days.map((option) => {\r\n            return (\r\n              <option\r\n                value={option}\r\n                key={option}\r\n                selected={option == this.props.day}\r\n              >\r\n                {option}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <span>&nbsp;Day</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DaySelect;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport moment from \"moment\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport LineChart from \"./components/LineChart\";\r\nimport DaySelect from \"./components/DaySelect\";\r\n\r\nexport class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let startDate = moment();\r\n\r\n    this.state = {\r\n      guide: 30,\r\n      items: [\r\n        {\r\n          key: \"1\",\r\n          name: \"Listening by keeping quiet, responds to pain, and touch.\",\r\n          value: \"1\",\r\n          date: moment(startDate).toDate(),\r\n          month: 0,\r\n          day: 1,\r\n          totalDays: 1,\r\n        },\r\n        {\r\n          key: \"2\",\r\n          name:\r\n            \"Communicates, seeks attention by crying or rapidly turning head sideways, and moving arms, legs and body.\",\r\n          value: \"2\",\r\n          date: moment(startDate).add(2, \"days\").toDate(),\r\n          month: 0,\r\n          day: 2,\r\n          totalDays: 2,\r\n        },\r\n        {\r\n          key: \"3\",\r\n          name: \"Notices mother’s or caregiver’s presence, or absence.\",\r\n          value: \"3\",\r\n          date: moment(startDate).add(5, \"days\").toDate(),\r\n          month: 0,\r\n          day: 5,\r\n          totalDays: 5,\r\n        },\r\n        {\r\n          key: \"4\",\r\n          name:\r\n            \"Begins studying faces, gazing at mother’s or caregiver’s face with interest. Can tell when mother or caregiver is around.\",\r\n          value: \"4\",\r\n          date: moment(startDate).add(21, \"days\").toDate(),\r\n          month: 0,\r\n          day: 21,\r\n          totalDays: 21,\r\n        },\r\n        {\r\n          key: \"5\",\r\n          name: \"Smiles to parents or smiles back.\",\r\n          value: \"5\",\r\n          date: moment(startDate).add(49, \"days\").toDate(),\r\n          month: 1,\r\n          day: 21,\r\n          totalDays: 51,\r\n        },\r\n        {\r\n          key: \"6\",\r\n          name:\r\n            \"Reaches for familiar people or objects. Waits eagerly to be fed.\",\r\n          value: \"6\",\r\n          date: moment(startDate).add(3, \"months\").toDate(),\r\n          month: 2,\r\n          day: 0,\r\n          totalDays: 60,\r\n        },\r\n        {\r\n          key: \"7\",\r\n          name: \"Babbles, laughs, orient to voice, ad enjoy looking.\",\r\n          value: \"7\",\r\n          date: moment(startDate).add(4, \"months\").toDate(),\r\n          month: 4,\r\n          day: 0,\r\n          totalDays: 120,\r\n        },\r\n        {\r\n          key: \"8\",\r\n          name: \"Develops a fear of strangers.\",\r\n          value: \"8\",\r\n          date: moment(startDate).add(6, \"months\").add(15, \"days\").toDate(),\r\n          month: 6,\r\n          day: 0,\r\n          totalDays: 180,\r\n        },\r\n        {\r\n          key: \"9\",\r\n          name: \"Indicates objects of interest by pointing fingers.\",\r\n          value: \"9\",\r\n          date: moment(startDate).add(8, \"months\").toDate(),\r\n          month: 8,\r\n          day: 0,\r\n          totalDays: 240,\r\n        },\r\n        {\r\n          key: \"10\",\r\n          name: \"Waves bye-bye, plays pat-a-cake, peke-a-boo.\",\r\n          value: \"10\",\r\n          date: moment(startDate).add(9, \"months\").toDate(),\r\n          month: 9,\r\n          day: 0,\r\n          totalDays: 270,\r\n        },\r\n        {\r\n          key: \"11\",\r\n          name: \"Develops Joint attention, actively explores environment.\",\r\n          value: \"11\",\r\n          date: moment(startDate).add(10, \"months\").toDate(),\r\n          month: 10,\r\n          day: 0,\r\n          totalDays: 300,\r\n        },\r\n        {\r\n          key: \"12\",\r\n          name: \"Says Dada, Mama, knows his name, and comes when called.\",\r\n          value: \"12\",\r\n          date: moment(startDate).add(11, \"months\").toDate(),\r\n          month: 11,\r\n          day: 0,\r\n          totalDays: 330,\r\n        },\r\n        {\r\n          key: \"13\",\r\n          name:\r\n            \"Checks with caregiver before doing certain activities (Social referencing), learns rules and cooperates with parents.\",\r\n          value: \"13\",\r\n          date: moment(startDate).add(12, \"months\").toDate(),\r\n          month: 12,\r\n          day: 0,\r\n          totalDays: 360,\r\n        },\r\n        {\r\n          key: \"14\",\r\n          name:\r\n            \"Points to indicate needs, has a budding vocabulary of at least 3-6 news words other than mama and Dada.\",\r\n          value: \"14\",\r\n          date: moment(startDate).add(14, \"months\").toDate(),\r\n          month: 14,\r\n          day: 0,\r\n          totalDays: 425,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  onUpdateDate = (key, month, day) => {\r\n    console.log(`key : ${key}, month : ${month}, day : ${day}`);\r\n\r\n    // let index = this.state.items.findIndex((el) => el.key == key);\r\n\r\n    // let items = this.state.items;\r\n    // items[index].month = month;\r\n    // items[index].day = day;\r\n\r\n    month = parseInt(month);\r\n    day = parseInt(day);\r\n    let totalDays = 0;\r\n    if (month > 12) {\r\n      totalDays = 365 + (month - 12) * 30 + day;\r\n    } else {\r\n      totalDays = month * 30 + day;\r\n    }\r\n\r\n    console.log(\"totalDays : \", totalDays);\r\n\r\n    this.setState({\r\n      guide: totalDays,\r\n    });\r\n\r\n    // this.setState(items);\r\n  };\r\n\r\n  render() {\r\n    let entry = this.state.items;\r\n\r\n    return (\r\n      <div className=\"main\">\r\n        <div className=\"leftContent\">\r\n          <div className=\"date-panel\">\r\n            <div>\r\n              <h5 style={{ padding: 10 }}>How old is the child?</h5>\r\n            </div>\r\n            <div>\r\n              <DaySelect\r\n                id={1}\r\n                month={1}\r\n                day={0}\r\n                onUpdateDate={this.onUpdateDate}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* <div className=\"datatable\">\r\n            <table className=\"data-table\">\r\n              <tbody>\r\n                <tr>\r\n                  <th>\r\n                    Social-Emotional Behavioral Graph for Infants (Newborn to 15\r\n                    Months)\r\n                  </th>\r\n                  <th style={{ width: 200 }}>Date</th>\r\n                </tr>\r\n                {entry.map((item) => {\r\n                  return (\r\n                    <tr key={item.key}>\r\n                      <td>{item.name}</td>\r\n                      <td>\r\n                        <DaySelect\r\n                          id={item.key}\r\n                          month={item.month}\r\n                          day={item.day}\r\n                          onUpdateDate={this.onUpdateDate}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div> */}\r\n        </div>\r\n\r\n        <div className=\"rightContent\">\r\n          <div className=\"chart-container\">\r\n            <div className=\"chart\">\r\n              <LineChart data={this.state.items} guide={this.state.guide} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}